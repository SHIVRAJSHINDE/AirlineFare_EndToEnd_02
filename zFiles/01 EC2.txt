
-----------------------------------------------------------------------------

sudo apt-get update
sudo apt-get install -y docker.io
sudo systemctl start docker
sudo systemctl enable docker
docker pull shivrajshinde/emotion:latest
docker run -p 80:5000 -e DAGSHUB_PAT= 
AWS security group

-----------------------------------------------------------------------------

sudo apt-get update
sudo apt-get install -y docker.io
sudo systemctl start docker
sudo systemctl enable docker
sudo apt-get update
sudo apt-get install -y unzip curl
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

------------------------------------------------------------

if you want to run the command together.

sudo apt-get update && \
sudo apt-get install -y docker.io && \
sudo systemctl start docker && \
sudo systemctl enable docker && \
sudo apt-get update && \
sudo apt-get install -y unzip curl && \
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
unzip awscliv2.zip && \
sudo ./aws/install


--------------------------------------------------------------------
sudo usermod -aG docker ubuntu

exit

aws configure

aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 905418096737.dkr.ecr.ap-south-1.amazonaws.com

docker pull 905418096737.dkr.ecr.ap-south-1.amazonaws.com/new_ecr:latest
docker pull 905418096737.dkr.ecr.ap-south-1.amazonaws.com/new_ecr:v1

run command with dagshub
docker run -p 80:5000 -e DAGSHUB_PAT=c7739af80dc00d48cfbd465104124cf4ecd96802 --name new_ecr 905418096737.dkr.ecr.ap-south-1.amazonaws.com/new_ecr:latest

docker run -p 80:5000 -e DAGSHUB_PAT=c7739af80dc00d48cfbd465104124cf4ecd96802 --name new_ecr 905418096737.dkr.ecr.ap-south-1.amazonaws.com/new_ecr:v1


--------------------------------------------------
--------------------------------------------------
Bash script for template

#!/bin/bash
# Ensure Docker is running
sudo systemctl start docker

# Check if the container is already running or exists
if [ "$(sudo docker ps -aq -f name=new_ecr)" ]; then
    # Stop and remove the existing container
    sudo docker stop new_ecr
    sudo docker rm new_ecr
fi

# Run the Docker container
sudo docker run -p 80:5000 -e DAGSHUB_PAT=c7739af80dc00d48cfbd465104124cf4ecd96802 --name new_ecr 905418096737.dkr.ecr.ap-south-1.amazonaws.com/new_ecr:latest

------------------------------------------------------------
------------------------------------------------------------





------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------

    - name: Deploy to EC2
    if: success()
    uses: appleboy/ssh-action@v0.1.5
    with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        scripts: |
        aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID}}
        aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws cofigure set default.region ap-south-1
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 905418096737.dkr.ecr.ap-south-1.amazonaws.com
        docker pull 905418096737.dkr.ecr.ap-south-1.amazonaws.com/new-docker-image-01:latest
        docker stop my-app || true
        docker rm my-app || true
        docker run -d -p 80:5000 -e DAGSHUB_PAT = ${{ secrets.DAGSHUB_PAT }} --name new-docker-image-01 905418096737.dkr.ecr.ap-south-1.amazonaws.com/new-docker-image-01:latest